name: Deploy to Production

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          debug: true
          script: |
            echo "=== Starting deployment process ==="

            # Vérifier le répertoire
            if [ ! -d "/home/notia/Notia" ]; then
              echo "Directory does not exist, creating..."
              mkdir -p /home/notia/Notia
              cd /home/notia/Notia
              git clone https://github.com/CreniautB/notia.git .
            else
              echo "Directory exists, proceeding with update..."
              cd /home/notia/Notia
            fi

            # Afficher la branche actuelle et le dernier commit
            echo "=== Current branch and commit ==="
            git branch
            git log -1

            # Forcer la mise à jour du code
            echo "=== Forcing update to latest changes ==="
            git fetch origin
            git stash || true
            git reset --hard origin/master
            git clean -fd package-lock.json || true
            echo "Local changes discarded and reset to remote master completed"

            # Installer les dépendances
            echo "=== Installing dependencies ==="
            npm install || { echo "npm install failed"; exit 1; }

            # Vérifier les fichiers .env
            echo "=== Vérification des fichiers .env ==="
            if [ ! -f "apps/backend/.env" ]; then
              echo "❌ Erreur: Le fichier .env du backend n'existe pas"
              exit 1
            fi

            if [ ! -f "apps/frontend/.env.local" ]; then
              echo "❌ Erreur: Le fichier .env.local du frontend n'existe pas"
              exit 1
            fi

            # Vérifier la connexion à MongoDB
            echo "=== Vérification de la connexion à MongoDB ==="
            MONGO_URI=$(grep MONGODB_URI apps/backend/.env | cut -d '=' -f2)
            if [ -z "$MONGO_URI" ]; then
              echo "❌ Erreur: MONGODB_URI n'est pas défini"
              exit 1
            fi

            # Tester la connexion MongoDB
            if ! mongosh "$MONGO_URI" --eval "db.adminCommand('ping')" > /dev/null 2>&1; then
              echo "❌ Erreur: Impossible de se connecter à MongoDB"
              exit 1
            fi
            echo "✅ Connexion à MongoDB réussie"

            # Build
            echo "=== Building projects ==="
            # Nettoyer les builds précédents
            rm -rf apps/frontend/.next
            rm -rf apps/backend/dist

            # Build des projets
            npx nx run-many --target=build --projects=frontend,backend || { echo "Build failed"; exit 1; }

            # Vérifier les processus PM2
            echo "=== Current PM2 processes ==="
            pm2 list

            # Nettoyer les processus existants
            echo "=== Nettoyage des processus PM2 ==="
            pm2 delete notia-frontend 2>/dev/null || true
            pm2 delete notia-backend 2>/dev/null || true

            # Démarrage des services
            echo "=== Démarrage des services ==="
            cd /home/notia/Notia

            # Vérifier et démarrer le frontend
            if [ -f "apps/frontend/.next/standalone/server.js" ]; then
              echo "Démarrage du frontend..."
              PORT=3000 NODE_ENV=production NEXT_PUBLIC_API_URL=http://217.154.16.57 pm2 start apps/frontend/.next/standalone/server.js --name notia-frontend || { echo "PM2 start frontend failed"; exit 1; }
            else
              echo "❌ Erreur: Le fichier server.js du frontend n'existe pas"
              ls -la apps/frontend/.next/
              exit 1
            fi

            # Vérifier et démarrer le backend
            if [ -f "apps/backend/dist/main.js" ]; then
              echo "Démarrage du backend..."
              pm2 start apps/backend/dist/main.js --name notia-backend || { echo "PM2 start backend failed"; exit 1; }
            else
              echo "❌ Erreur: Le fichier main.js du backend n'existe pas"
              ls -la apps/backend/dist/
              exit 1
            fi

            # Sauvegarder la configuration PM2
            pm2 save

            echo "=== Deployment complete ==="
